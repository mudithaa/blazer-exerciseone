#pragma checksum "C:\muditha.git\Blazer\Blazer\Pages\FetchData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7e7e438914a970acc6c95458bb1c1441e193b703"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Blazer.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Blazer;
    using Blazer.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchdata")]
    public class FetchData : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 39 "C:\muditha.git\Blazer\Blazer\Pages\FetchData.cshtml"
            
    WeatherForecast[] forecasts;
    public DateTime EventDate { get { return new DateTime(2018, 06, 11); } }
    public string CountDownString { get; set; }


    private void HandleTimer(object sender, System.Timers.ElapsedEventArgs e)
    {
        CountDown = EventDate - DateTime.Now;
    }

    void UpdateCountDown(UIMouseEventArgs e)
    {
        CountDown = EventDate - DateTime.Now;
    }

    protected override async Task OnInitAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("/sample-data/weather.json");

        CountDown = EventDate - DateTime.Now;
        System.Timers.Timer timer = new System.Timers.Timer(1000);

        timer.Elapsed += new System.Timers.ElapsedEventHandler(HandleTimer);
        timer.Start();
    }

    class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF { get; set; }
        public string Summary { get; set; }
    }

    public DateTime date1
    {
        get
        {
            return DateTime.Now;
        }
    }

    public DateTime today { get { return new DateTime(2018, 04, 24); } }

    public TimeSpan CountDown { get; set; }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
